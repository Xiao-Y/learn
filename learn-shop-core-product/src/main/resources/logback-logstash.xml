<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" scanPeriod="60 seconds" debug="false">
    <!-- spring boot默认配置 -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <springProperty scope="context" name="APP_PORT" source="server.port"/>
    <springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="bootstrap"/>

    <!--  日志路径  -->
    <property name="LOG_HOME" value="/usr/local/app/logs"/>
    <!--  mq 配置  -->
    <!--日志存储位置（读取配置文件的路径）-->
    <springProperty name="rabbitmqHost" source="config.mq.host"/>
    <springProperty name="rabbitmqPort" source="config.mq.port"/>
    <springProperty name="rabbitmqVirtualHost" source="config.mq.virtual-host"/>
    <springProperty name="rabbitmqUsername" source="config.mq.username"/>
    <springProperty name="rabbitmqPassword" source="config.mq.password"/>
    <springProperty name="rabbitmqExchange" source="notice.mq.mq-collect.log-collect.exchange"/>
    <springProperty name="rabbitmqRouteKey" source="notice.mq.mq-collect.log-collect.route-key"/>
    <springProperty name="rabbitmqLogLevel" source="config.mq.log-level"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--  控制台日志格式  -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}) [${APP_NAME} - ${APP_PORT}] %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <!--  文件日志格式  -->
    <property name="FILE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [${APP_NAME}] [${APP_PORT}] [%X{traceid}] [%thread] %-5level %logger{50} : %msg%n"/>
    <!--  MQ日志格式，请务修改：修改后需要修改elk  -->
    <property name="MQ_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [${APP_NAME}] [${APP_PORT}] [%X{traceid}] [%thread] %-5level %logger{50} : %msg%n"/>


<!--    &lt;!&ndash;  控制台日志  &ndash;&gt;-->
<!--    <appender name="CONSOLE_OUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder>-->
<!--            <pattern>-->
<!--                ${CONSOLE_LOG_PATTERN}-->
<!--            </pattern>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息&ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>info</level>-->
<!--        </filter>-->
<!--    </appender>-->
    <appender name="CONSOLE_OUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
                <Pattern>%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}) [%-5level] [%tid] %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}</Pattern>
            </layout>
        </encoder>
    </appender>

    <appender name="grpc" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout">
                <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{tid}] [%thread] %-5level %logger{36} -%msg%n</Pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 时间滚动输出 level为 DEBUG 日志 -->
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_HOME}/${APP_NAME}/log_debug.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径和文件名 -->
            <fileNamePattern>${LOG_HOME}/${APP_NAME}/debug/log_debug-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>3</maxHistory>
            <!-- 每个文件的大小 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <!-- 文件日志格式 -->
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 此日志文件只记录 debug 级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_HOME}/${APP_NAME}/log_info.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径和文件名 -->
            <fileNamePattern>${LOG_HOME}/${APP_NAME}/info/log_info-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>3</maxHistory>
            <!-- 每个文件的大小 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <!-- 文件日志格式 -->
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 此日志文件只记录 info 级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 时间滚动输出 level为 ERROR 日志 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_HOME}/${APP_NAME}/log_error.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径和文件名 -->
            <fileNamePattern>${LOG_HOME}/${APP_NAME}/error/log_info-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!-- 日志文件保留天数 -->
            <maxHistory>30</maxHistory>
            <!-- 每个文件的大小 -->
            <maxFileSize>100MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <!-- 文件日志格式 -->
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 此日志文件只记录 error 级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="AMQP" class="org.springframework.amqp.rabbit.logback.AmqpAppender">
        <!--        <encoder>-->
        <!--            &lt;!&ndash; 文件日志格式 &ndash;&gt;-->
        <!--            <pattern>${MQ_LOG_PATTERN}</pattern>-->
        <!--            &lt;!&ndash; 设置字符集 &ndash;&gt;-->
        <!--            <charset>UTF-8</charset>-->
        <!--        </encoder>-->
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <!--如下是新增的配置，解决中文乱码-->
            <jsonFactoryDecorator class="net.logstash.logback.decorate.CharacterEscapesJsonFactoryDecorator">
                <escape>
                    <targetCharacterCode>10</targetCharacterCode>
                    <escapeSequence>\u2028</escapeSequence>
                </escape>
            </jsonFactoryDecorator>
            <providers>
                <pattern>
                    <pattern>
                        {
                        "msgType":"learn-log",
                        "timestamp": "%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "appName": "${APP_NAME}",
                        "appPort": "${APP_PORT}",
                        "trace": "%X{traceid}",
                        "thread": "%thread",
                        "level": "%level",
                        "pid": "${PID:-}",
                        "class": "%logger{40}",
                        "msg": "%msg"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <host>${rabbitmqHost}</host>
        <port>${rabbitmqPort}</port>
        <virtualHost>${rabbitmqVirtualHost}</virtualHost>
        <username>${rabbitmqUsername}</username>
        <password>${rabbitmqPassword}</password>
        <exchangeName>${rabbitmqExchange}</exchangeName>
        <routingKeyPattern>${rabbitmqRouteKey}</routingKeyPattern>

        <declareExchange>false</declareExchange>
        <generateId>true</generateId>
        <charset>UTF-8</charset>
        <durable>true</durable>
        <deliveryMode>NON_PERSISTENT</deliveryMode>
        <!-- 日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>${rabbitmqLogLevel}</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <logger name="com.alibaba.nacos.client.config.impl" level="ERROR"/>
    <logger name="com.alibaba.cloud.sentinel.datasource.converter" level="ERROR"/>
    <logger name="com.billow" level="info"/>

    <!-- 一般用默认的info就可以 -->
    <root level="info">
        <!-- 控制台输出日志-->
        <appender-ref ref="CONSOLE_OUT"/>
        <appender-ref ref="DEBUG_FILE"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
<!--        <appender-ref ref="AMQP"/>-->
        <appender-ref ref="grpc"/>
    </root>
</configuration>